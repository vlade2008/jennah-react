(function(global,factory){if(typeof define==="function"&&define.amd){define(["module","validatorjs"],factory)}else if(typeof exports!=="undefined"){factory(module,require("validatorjs"))}else{var mod={exports:{}};factory(mod,global.validatorjs);global.strategy=mod.exports}})(this,function(module,Validator){"use strict";module.exports={createSchema:function(rules,messages,callback){return{rules:rules,messages:messages,callback:callback}},createInactiveSchema:function(rules,messages,callback){var schema=this.createSchema(rules,messages,callback);schema.activeRules=[];return schema},activateRule:function(schema,rule){if(typeof schema.activeRules!=="undefined"&&schema.activeRules.indexOf(rule)===-1){schema.activeRules.push(rule)}},createValidator:function(data,schema,forceActive){var rules={};if(typeof schema.activeRules!=="undefined"){if(forceActive){schema.activeRules=Object.keys(schema.rules)}for(var i in schema.activeRules){var ruleName=schema.activeRules[i];rules[ruleName]=schema.rules[ruleName]}}else{rules=schema.rules}var validator=new Validator(data,rules,schema.messages);if(typeof schema.callback==="function"){schema.callback(validator)}return validator},validate:function(data,schema,options,callback){var forceActive=!options.key;var validator=this.createValidator(data,schema,forceActive);var getErrors=function(){if(options.key){options.prevErrors[options.key]=validator.errors.get(options.key);callback(options.prevErrors)}else{callback(validator.errors.all())}};validator.checkAsync(getErrors,getErrors)},validateServer:function(data,schema){var validator=this.createValidator(data,schema,true);var Error=this.Error;return new Promise(function(resolve,reject){validator.checkAsync(resolve,function(){var e=new Error("A validation error occurred");e.errors=validator.errors.all();reject(e)})})},Error:function(message){this.message=message;this.errors={}}}});